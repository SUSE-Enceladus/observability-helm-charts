{{- define "container-agent" -}}
{{- $kubeStateOverridden := (include "cluster-agent.agent.kube-state-metrics.overridden" $) }}
{{- $clusterCheckKSM1 := and (and .Values.clusterChecks.enabled (or .Values.dependencies.kubeStateMetrics.enabled .Values.clusterChecks.kubeStateMetrics.url)) (not $kubeStateOverridden) }}
- name: agent
  image: "{{ include "cluster-agent.imageRegistry" . }}/{{ .Values.agent.containers.agent.image.repository }}:{{ .Values.agent.containers.agent.image.tag }}"
  imagePullPolicy: "{{ .Values.agent.containers.agent.image.pullPolicy }}"
  env:
    - name: STS_API_KEY
      valueFrom:
        secretKeyRef:
          name: {{ include "cluster-agent.fullname" . }}
          key: sts-api-key
    - name: STS_KUBERNETES_KUBELET_HOST
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: AGENT_VERSION
      value: {{ .Values.agent.containers.agent.image.tag | quote }}
    - name: HOST_PROC
      value: "/host/proc"
    - name: HOST_SYS
      value: "/host/sys"
    - name: KUBERNETES
      value: "true"
    - name: STS_APM_ENABLED
      value: {{ .Values.agent.apm.enabled | quote }}
    - name: STS_APM_URL
      value: {{ include "cluster-agent.stackstate.url" . }}
    - name: STS_CLUSTER_AGENT_ENABLED
      value: {{ .Values.clusterAgent.enabled | quote }}
    {{- if .Values.clusterAgent.enabled }}
    - name: STS_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
      value: {{ include "cluster-agent.fullname" . }}
    - name: STS_CLUSTER_AGENT_AUTH_TOKEN
      valueFrom:
        secretKeyRef:
          name: {{ include "cluster-agent.fullname" . }}
          key: sts-cluster-auth-token
    {{- end }}
    - name: STS_CLUSTER_NAME
      value: {{ .Values.stackstate.cluster.name | quote }}
    - name: STS_CHECKS_TAG_CARDINALITY
      value: {{ .Values.agent.checksTagCardinality | quote }}
    {{- if .Values.clusterChecks.enabled }}
    - name: STS_EXTRA_CONFIG_PROVIDERS
      value: "endpointschecks"
    {{- end }}
    - name: STS_HEALTH_PORT
      value: "5555"
    - name: STS_LEADER_ELECTION
      value: "false"
    - name: LOG_LEVEL
      value: {{ .Values.agent.containers.agent.logLevel | default .Values.agent.logLevel | quote }}
    - name: STS_LOG_LEVEL
      value: {{ .Values.agent.containers.agent.logLevel | default .Values.agent.logLevel | quote }}
    - name: STS_NETWORK_TRACING_ENABLED
      value: {{ .Values.agent.networkTracing.enabled | quote }}
    - name: STS_PROTOCOL_INSPECTION_ENABLED
      value: {{ .Values.agent.protocolInspection.enabled | quote }}
    - name: STS_PROCESS_AGENT_ENABLED
      value: {{ .Values.agent.containers.agent.processAgent.enabled | quote }}
    - name: STS_CONTAINER_CHECK_INTERVAL
      value: {{ .Values.processAgent.checkIntervals.container | quote }}
    - name: STS_CONNECTION_CHECK_INTERVAL
      value: {{ .Values.processAgent.checkIntervals.connections | quote }}
    - name: STS_PROCESS_CHECK_INTERVAL
      value: {{ .Values.processAgent.checkIntervals.process | quote }}
    - name: STS_PROCESS_AGENT_URL
      value: {{ include "cluster-agent.stackstate.url" . }}
    - name: STS_SKIP_SSL_VALIDATION
      value: {{ .Values.agent.skipSslValidation | quote }}
    - name: STS_STS_URL
      value: {{ include "cluster-agent.stackstate.url" . }}
    {{- if .Values.agent.containerRuntime.customSocketPath }}
    - name: STS_CRI_SOCKET_PATH
      value: {{- .Values.agent.containerRuntime.customSocketPath }}
    {{- end }}
    {{- range $key, $value := .Values.agent.containers.agent.env }}
    - name: {{ $key }}
      value: {{ $value | quote }}
    {{- end }}
    {{- range $key, $value := .Values.global.extraEnv.open }}
    - name: {{ $key }}
      value: {{ $value | quote }}
    {{- end }}
    {{- range $key, $value := .Values.global.extraEnv.secret }}
    - name: {{ $key }}
      valueFrom:
        secretKeyRef:
          name: {{ include "cluster-agent.fullname" . }}
          key: {{ $key }}
    {{- end }}
  {{- if .Values.agent.containers.agent.livenessProbe.enabled }}
  livenessProbe:
    httpGet:
      path: /health
      port: healthport
    failureThreshold: {{ .Values.agent.containers.agent.livenessProbe.failureThreshold }}
    initialDelaySeconds: {{ .Values.agent.containers.agent.livenessProbe.initialDelaySeconds }}
    periodSeconds: {{ .Values.agent.containers.agent.livenessProbe.periodSeconds }}
    successThreshold: {{ .Values.agent.containers.agent.livenessProbe.successThreshold }}
    timeoutSeconds: {{ .Values.agent.containers.agent.livenessProbe.timeoutSeconds }}
  {{- end }}
  {{- if .Values.agent.containers.agent.readinessProbe.enabled }}
  readinessProbe:
    httpGet:
      path: /health
      port: healthport
    failureThreshold: {{ .Values.agent.containers.agent.readinessProbe.failureThreshold }}
    initialDelaySeconds: {{ .Values.agent.containers.agent.readinessProbe.initialDelaySeconds }}
    periodSeconds: {{ .Values.agent.containers.agent.readinessProbe.periodSeconds }}
    successThreshold: {{ .Values.agent.containers.agent.readinessProbe.successThreshold }}
    timeoutSeconds: {{ .Values.agent.containers.agent.readinessProbe.timeoutSeconds }}
  {{- end }}
  ports:
  - containerPort: 8126
    name: traceport
    protocol: TCP
  - containerPort: 5555
    name: healthport
    protocol: TCP
  {{- with .Values.agent.containers.agent.resources }}
  resources:
    {{- toYaml . | nindent 12 }}
  {{- end }}
  volumeMounts:
  {{- if .Values.agent.containerRuntime.customSocketPath }}
  - name: customcrisocket
    mountPath: {{- .Values.agent.containerRuntime.customSocketPath }}
  {{- end }}
  - name: crisocket
    mountPath: /var/run/crio/crio.sock
  - name: containerdsocket
    mountPath: /var/run/containerd/containerd.sock
  - name: sys-kernel-debug
    mountPath: /sys/kernel/debug
  - name: dockersocket
    mountPath: /var/run/docker.sock
  - name: procdir
    mountPath: /host/proc
    readOnly: true
  - name: passwd
    mountPath: /etc/passwd
    readOnly: true
  - name: cgroups
    mountPath: /host/sys/fs/cgroup
    readOnly: true
  {{- if .Values.agent.config.override }}
  {{- range .Values.agent.config.override }}
  - name: config-override-volume
    mountPath: {{ .path }}/{{ .name }}
    subPath: {{ .path | replace "/" "_"}}_{{ .name }}
  {{- end }}
  {{- end }}
  {{- if $clusterCheckKSM1 }}
  - name: config-override-volume
    mountPath: /etc/stackstate-agent/conf.d/kubernetes_state.d/auto_conf.yaml
    subPath: _etc_stackstate-agent_conf.d_kubernetes_state.d_auto_conf.yaml
  {{- end }}
  securityContext:
    privileged: true
{{- end -}}
