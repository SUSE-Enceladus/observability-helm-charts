{{- define "stackstate.router.api.name" -}}
  {{- if .Values.stackstate.experimental.server.split }}api{{ else }}server{{ end }}
{{- end -}}
{{- define "stackstate.router.configmap" -}}
metadata:
  name: {{ template "common.fullname.short" . }}-router
data:
  envoy.yaml: |-
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              {{- if .Values.stackstate.components.router.accesslog.enabled }}
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
              {{- end }}
              codec_type: AUTO
              stat_prefix: ingress_http
              upgrade_configs:
              - upgrade_type: websocket
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/admin/"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-admin"
                      prefix_rewrite: "/"
                  - match:
                      prefix: "/api"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-main"
                  - match:
                      prefix: "/loginCallback"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-main"
                  - match:
                      prefix: "/loginInfo"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-main"
                  - match:
                      prefix: "/logout"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-main"
                  - match:
                      prefix: "/stsAgent"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-receiver"
                  - match:
                      prefix: "/receiver/"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-receiver"
                      prefix_rewrite: "/"
                  - match:
                      prefix: "/"
                    route:
                      timeout: 0s
                      cluster: "{{ template "common.fullname.short" . }}-ui"
                    response_headers_to_add:
                      - header:
                          key: "X-Frame-Options"
                          value: "DENY"
                        append: true
              http_filters:
              - name: envoy.filters.http.router
                typed_config: {}
      clusters:
      - name: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-main"
        type: STRICT_DNS
        lb_policy: LEAST_REQUEST
        http_protocol_options: {}
        connect_timeout: 2s
        load_assignment:
          cluster_name: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-main"
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-headless"
                    port_value: 7070
      - name: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-admin"
        type: STRICT_DNS
        lb_policy: LEAST_REQUEST
        connect_timeout: 2s
        load_assignment:
          cluster_name: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-admin"
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-headless"
                    port_value: 7071
      - name: "{{ template "common.fullname.short" . }}-receiver"
        type: STRICT_DNS
        lb_policy: LEAST_REQUEST
        connect_timeout: 2s
        load_assignment:
          cluster_name: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-receiver"
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: "{{ template "common.fullname.short" . }}-receiver"
                    port_value: 7077
      - name: "{{ template "common.fullname.short" . }}-ui"
        type: STRICT_DNS
        lb_policy: LEAST_REQUEST
        http_protocol_options: {}
        connect_timeout: 2s
        load_assignment:
          cluster_name: "{{ template "common.fullname.short" . }}-{{ template "stackstate.router.api.name" . }}-ui"
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: "{{ template "common.fullname.short" . }}-ui"
                    port_value: 8080
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 8001

{{- end -}}

{{- $commonConfigMap := fromYaml (include "common.configmap" .) -}}
{{- $stackstateRouterConfigMap := fromYaml (include "stackstate.router.configmap" .) -}}
{{- toYaml (merge $stackstateRouterConfigMap $commonConfigMap) -}}
