{{- define "clickhouse.backup.cronjob" -}}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: suse-observability-clickhouse-{{ .job_name }}
  labels:
    app.kubernetes.io/component: backup
    {{- include "suse-observability.labels.global" . | nindent 4 }}
spec:
  concurrencyPolicy: Forbid
  schedule: {{ .cron_schedule | quote }}
  {{- if .Values.deployment.compatibleWithArgoCD }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  {{- end }}
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/component: backup
        {{- include "suse-observability.labels.global" . | nindent 8 }}
    spec:
      backoffLimit: 1
      {{- if not .Values.deployment.compatibleWithArgoCD }}
      ttlSecondsAfterFinished: {{ include "stackstate.job.ttlSecondsAfterFinished" . }}
      {{- end }}
      template:
        metadata:
        {{- if or .Values.stackstate.components.all.podAnnotations .Values.clickhouse.backup.podAnnotations }}
          annotations:
          {{- with .Values.stackstate.components.all.podAnnotations }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.backup.podAnnotations }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
          labels:
            app.kubernetes.io/component: backup
            {{- include "suse-observability.labels.global" . | nindent 12 }}
          {{- with .Values.clickhouse.backup.podLabels }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        spec:
          containers:
            - name: backup-clickhouse-full
              image: "{{ include "common.image.registry" ( dict "image" .Values.clickhouse.backup.image "context" $) }}/{{ .Values.clickhouse.backup.image.repository }}:{{ .Values.clickhouse.backup.image.tag }}"
              imagePullPolicy: {{ default .Values.stackstate.components.all.image.pullPolicy .Values.stackstate.components.server.image.pullPolicy | quote }}
              command:
                - '/app/scripts/{{ .script_name }}.sh'
              env:
                - name: BACKUP_TABLES
                  value: "{{ .Values.clickhouse.backup.config.tables }}"
              volumeMounts:
                - mountPath: /app/scripts/{{ .script_name }}.sh
                  name: clickhouse-backup-scripts
                  subPath: {{ .script_name }}.sh
              securityContext:
                runAsUser: 1001
          {{- include "stackstate.image.pullSecret.name" (dict "context" $) | nindent 10 }}
          volumes:
            - name: clickhouse-backup-scripts
              configMap:
                name: suse-observability-clickhouse-backup-scripts
                defaultMode: 0550
        {{- if or .Values.stackstate.components.all.nodeSelector .Values.clickhouse.backup.nodeSelector }}
          nodeSelector:
          {{- with .Values.stackstate.components.all.nodeSelector }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.backup.nodeSelector }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if or .Values.stackstate.components.all.affinity .Values.clickhouse.backup.affinity }}
          affinity:
          {{- with .Values.stackstate.components.all.affinity }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.backup.affinity }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if or .Values.stackstate.components.all.tolerations .Values.clickhouse.backup.tolerations }}
          tolerations:
          {{- with .Values.stackstate.components.all.tolerations }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.backup.tolerations }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
          restartPolicy: Never
{{- end -}}

{{- if and .Values.clickhouse.enabled .Values.backup.enabled .Values.clickhouse.backup.enabled }}

{{- $fullBackupConfig := dict "job_name" "full-backup" "script_name" "full-backup" "cron_schedule" .Values.clickhouse.backup.scheduled.full_schedule }}
{{- include "clickhouse.backup.cronjob" (merge $fullBackupConfig .) }}
---
{{- $incrementalBackupConfig := dict "job_name" "incremental-backup" "script_name" "incremental-backup" "cron_schedule" .Values.clickhouse.backup.scheduled.incremental_schedule }}
{{- include "clickhouse.backup.cronjob" (merge $incrementalBackupConfig .) }}

{{- end }}
