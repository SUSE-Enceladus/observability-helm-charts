{{- define "stackstate.state.persistentvolumeclaim.txLog" -}}
{{- $storageClass := include "suse-observability.features.get" (dict "key" "storeTransactionLogsToPVC.storageClass" "context" . ) }}
metadata:
  name: {{ template "common.fullname.short" . }}-state-txlog
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ include "suse-observability.features.get" (dict "key" "storeTransactionLogsToPVC.volumeSize" "context" . )}}
{{- if ne $storageClass "<no value>" }}
  storageClassName: {{ $storageClass }}
{{- end }}
{{- end -}}

{{- if and (include "suse-observability.features.enabled" (dict "key" "storeTransactionLogsToPVC.enabled" "context" .)) (include "suse-observability.features.enabled" (dict "key" "server.split" "context" .)) }}
{{- $commonPVC := fromYaml (include "common.persistentvolumeclaim" .) -}}
{{- $stackstateStatePVCTxLog := fromYaml (include "stackstate.state.persistentvolumeclaim.txLog" .) -}}
{{- toYaml (merge $stackstateStatePVCTxLog $commonPVC) -}}
{{- end -}}

{{- if and .Values.stackstate.components.state.tmpToPVC (include "suse-observability.features.enabled" (dict "key" "server.split" "context" .)) }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "common.fullname.short" . }}-state-tmp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.stackstate.components.state.tmpToPVC.volumeSize }}
  {{ include "common.storage.class" ( dict "persistence" .Values.stackstate.components.state.tmpToPVC "global" .Values.global) | nindent 2}}
{{- end}}
