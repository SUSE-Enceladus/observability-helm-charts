{{- if eq .Values.stackstate.components.router.mode.status "automatic" }}
apiVersion: batch/v1
kind: Job
metadata:
  {{- if .Values.deployment.compatibleWithArgoCD }}
  generateName: set-maintenance-
  {{- else }}
  name: {{ template "common.fullname.short" . }}-set-maintenance-{{ now | date "02t150405" }}
  {{- end }}
  labels:
    app.kubernetes.io/component: router-mode
    {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
    {{- if .Values.deployment.compatibleWithArgoCD }}
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "-1"
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
    {{- else }}
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- end }}
    {{- with .Values.stackstate.components.router.mode.jobAnnotations }}
      {{- toYaml . | nindent 4}}
    {{- end }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: router-mode
        {{- include "common.labels.standard" . | nindent 4 }}
    spec:
      serviceAccountName: "{{ template "common.fullname.short" . }}-router-mode-scripts"
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      volumes:
        - name: "{{ template "common.fullname.short" . }}-router-mode-scripts"
          configMap:
            name: "{{ template "common.fullname.short" . }}-router-mode-scripts"
            defaultMode: 0777
      containers:
        - name: router-mode-maintenance
          image: "{{include "stackstate.router.mode.image.registry" .}}/{{ .Values.stackstate.components.router.mode.image.repository }}:{{ .Values.stackstate.components.router.mode.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.router.mode.image.pullPolicy | quote }}
          {{- with .Values.stackstate.components.router.mode.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: "{{ template "common.fullname.short" . }}-router-mode-scripts"
              mountPath: /scripts
              readOnly: true
          command: [ "/scripts/set-maintenance.sh" ]
      restartPolicy: Never
  {{- if or .Values.stackstate.components.all.nodeSelector .Values.stackstate.components.router.mode.nodeSelector }}
      nodeSelector:
    {{- with .Values.stackstate.components.all.nodeSelector }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.stackstate.components.router.mode.nodeSelector }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
  {{- if or .Values.stackstate.components.all.affinity .Values.stackstate.components.router.mode.affinity }}
      affinity:
    {{- with .Values.stackstate.components.all.affinity }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.stackstate.components.router.mode.affinity }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
  {{- if or .Values.stackstate.components.all.tolerations .Values.stackstate.components.router.mode.tolerations }}
      tolerations:
    {{- with .Values.stackstate.components.all.tolerations }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.stackstate.components.router.mode.tolerations }}
      {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
  {{- if .Values.stackstate.components.router.mode.securityContext.enabled }}
      securityContext: {{- omit .Values.stackstate.components.router.mode.securityContext "enabled" | toYaml | nindent 8 }}
  {{- end }}
  backoffLimit: 0
{{- end }}
