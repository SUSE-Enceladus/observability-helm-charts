{{- define "stackstate.api.name" -}}
  {{- if include "suse-observability.features.enabled" (dict "key" "server.split" "context" .) }}api{{ else }}server{{ end }}
{{- end -}}

{{- define "stackstate.authSync.name" -}}
  {{- if include "suse-observability.features.enabled" (dict "key" "server.split" "context" .) }}authorization-sync{{ else }}server-headless{{ end }}
{{- end -}}

{{- define "stackstate.receiver.name.postfix" -}}
  {{- if .ReceiverType }}-{{ .ReceiverType }}{{ else }}{{ end }}
{{- end -}}
{{- define "stackstate.receiver.deployment.container.init" -}}
name: receiver-init
command:
- sh
- -c
- |
  /entrypoint -c {{ include "stackstate.kafka.endpoint" . }},{{ include "stackstate.es.endpoint" . }} -t 300
image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
{{- end -}}


{{- define "stackstate.receiver.deployment.container.main" -}}
envFrom:
  - secretRef:
      name: {{ include "stackstate.secret.name.apiKey" .  }}
env:
{{- $serviceTypeConfig := merge .TypeConfig (omit .Values.stackstate.components.receiver "split") }}
{{- $serviceConfig := dict "ServiceName" "receiver" "ServiceConfig" $serviceTypeConfig }}
{{- include "stackstate.service.envvars" (merge $serviceConfig .) }}
- name: ELASTICSEARCH_URI
  value: "http://{{ include "stackstate.es.endpoint" . }}"
- name: KAFKA_BROKERS
  value: {{ include "stackstate.kafka.endpoint" . | quote }}
- name: RECEIVER_WRITE_STS_METRICS
  value: "false"
- name: RECEIVER_WRITE_PROMETHEUS
  value: "true"
- name: PROMETHEUS_WRITE_ENDPOINT
  value: http://{{ include "stackstate.vmagent.endpoint" . }}:8429/api/v1/write
{{ $replicationFactor := ternary "1" "0" (gt .Values.elasticsearch.replicas 2.0) }}
- name: CONFIG_FORCE_stackstate_receiver_k8sLogs_replicas
  value: "{{ $replicationFactor  }}"
{{ $diskSpaceMB := (include "stackstate.storage.to.megabytes" .Values.elasticsearch.volumeClaimTemplate.resources.requests.storage) }}
{{ if $diskSpaceMB  }}
- name: CONFIG_FORCE_stackstate_receiver_elasticsearchDiskSpaceMB
  value: "{{ divf (mulf (divf (mulf $diskSpaceMB .Values.elasticsearch.replicas) (add1 $replicationFactor)) .Values.stackstate.components.receiver.esDiskSpaceShare) 100 | int }}"
{{ end }}
- name: CONFIG_FORCE_stackstate_receiver_k8sLogs.indexMaxAge
  value: "{{ .Values.stackstate.components.receiver.retention }} days"
- name: CONFIG_FORCE_stackstate_receiver_agentLeases_agentServiceBaseUri
  value: "http://{{ template "common.fullname.short" . }}-{{ template "stackstate.api.name" . }}-headless:7070/internal/api/agents"
- name: CONFIG_FORCE_stackstate_receiver_authorizationService_authorizationServiceBaseUri
  value: "http://{{ template "common.fullname.short" . }}-{{ template "stackstate.api.name" . }}-headless:7070/api/user/authorization"
{{- if .Values.stackstate.k8sAuthorization.enabled }}
- name: CONFIG_FORCE_stackstate_receiver_authorizationSyncApi_authorizationSyncApiBaseUri
  value: "http://{{ template "common.fullname.short" . }}-{{ template "stackstate.authSync.name" . }}:7075/rbac"
- name: CONFIG_FORCE_stackstate_receiver_authorizationSyncApi_enabled
  value: "true"
- name: CONFIG_FORCE_stackstate_receiver_featureSwitches_receiveRbacData
  value: "true"
{{- end }}
{{- include "stackstate.component.envsFromExistingSecrets" .Values.stackstate.components.all.envsFromExistingSecrets }}
{{- include "stackstate.component.envsFromExistingSecrets" .Values.stackstate.components.receiver.envsFromExistingSecrets }}
image: "{{ include "stackstate.image.registry" (merge $serviceConfig .) }}/{{ .Values.stackstate.components.receiver.image.repository }}{{ .Values.stackstate.components.all.image.repositorySuffix }}:{{ default .Values.stackstate.components.all.image.tag .Values.stackstate.components.receiver.image.tag }}"
imagePullPolicy: {{ default .Values.stackstate.components.all.image.pullPolicy .Values.stackstate.components.receiver.image.pullPolicy | quote }}
name: receiver
args:
{{- include "stackstate.service.args" . }}
volumeMounts:
{{- include "stackstate.service.container.volumes" . }}
ports:
- containerPort: 1618
  name: health
- containerPort: 7077
  name: receiver
{{- if .Values.stackstate.components.all.metrics.enabled }}
- containerPort: 9404
  name: metrics
{{- end }}
livenessProbe:
  httpGet:
    path: /liveness
    port: health
  initialDelaySeconds: 60
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /readiness
    port: health
  initialDelaySeconds: 10
  timeoutSeconds: 5
{{- with (merge .TypeConfig.resources .Values.stackstate.components.receiver.resources) }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- end -}}

{{- define "stackstate.receiver.deployment" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "stackstate.receiver.deployment.container.main" .) -}}
{{- $stsstackstateReceiverMainContainer := (merge $overrideContainer $commonContainer) -}}
{{- $overrideContainer := fromYaml (include "stackstate.receiver.deployment.container.init" .) -}}
{{- $stsstackstateReceiverInitContainer := (merge $overrideContainer $commonContainer) -}}
metadata:
  name: {{ template "common.fullname.short" . }}-receiver{{ template "stackstate.receiver.name.postfix" . }}
  labels:
    app.kubernetes.io/component: receiver{{ template "stackstate.receiver.name.postfix" . }}
    app.kubernetes.io/component-group: receiver
spec:
  replicas: {{ .TypeConfig.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: receiver{{ template "stackstate.receiver.name.postfix" . }}
  strategy:
{{- if eq (lower .Values.stackstate.components.all.deploymentStrategy.type) "recreatesingletonsonly" }}
    type: RollingUpdate
{{- else }}
    {{- toYaml .Values.stackstate.components.all.deploymentStrategy | nindent 4 }}
{{- end }}
  template:
    metadata:
      annotations:
        {{- include "common.metrics.annotations" (dict "metrics" .Values.stackstate.components.all.metrics "port" "9404" "container_name" "receiver" "filter" .Values.stackstate.components.receiver.agentMetricsFilter) | indent 8 }}
        {{- include "stackstate.common.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.receiver.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.apiKey.secret.checksum" . | nindent 8 }}
        {{- include "stackstate.receiver.configmap.checksum" . | nindent 8 }}
        {{- include "stackstate.component.podExtraAnnotations" (merge (dict "Name" "receiver") .) }}
        {{- with .TypeConfig.podAnnotations }}
        {{- toYaml . | nindent 8}}
        {{- end }}
      labels:
        app.kubernetes.io/component: receiver{{ template "stackstate.receiver.name.postfix" . }}
        app.kubernetes.io/component-group: receiver
    spec:
      {{- include "stackstate.image.pullSecret.name" (dict "context" $) | nindent 6 }}
      initContainers:
      - {{ toYaml $stsstackstateReceiverInitContainer | nindent 8 }}
      containers:
      - {{ toYaml $stsstackstateReceiverMainContainer | nindent 8 }}
      volumes:
        {{- include "stackstate.service.pod.volumes" (dict "pod_name" "receiver" "root" . ) | nindent 8 }}
    {{- if or .Values.stackstate.components.all.nodeSelector (or .Values.stackstate.components.receiver.nodeSelector .TypeConfig.nodeSelector) }}
      nodeSelector:
      {{- with .Values.stackstate.components.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.receiver.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .TypeConfig.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.affinity (or .Values.stackstate.components.receiver.affinity .TypeConfig.affinity) }}
      affinity:
      {{- with .Values.stackstate.components.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.receiver.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .TypeConfig.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.stackstate.components.all.tolerations (or .Values.stackstate.components.receiver.tolerations .TypeConfig.tolerations) }}
      tolerations:
      {{- with .Values.stackstate.components.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackstate.components.receiver.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .TypeConfig.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if .Values.stackstate.components.all.securityContext.enabled }}
      securityContext: {{- omit .Values.stackstate.components.all.securityContext "enabled" | toYaml | nindent 8 }}
    {{- end }}
{{- end -}}

{{- $commonDeployment := fromYaml (include "common.deployment" .) -}}

{{- if .Values.stackstate.components.receiver.split.enabled }}
{{- $receiverBaseArgs := merge (dict "ReceiverType" "base" "TypeConfig" .Values.stackstate.components.receiver.split.base) . -}}
{{- $receiverBaseDeployment := fromYaml (include "stackstate.receiver.deployment" $receiverBaseArgs) -}}
{{- toYaml (merge $receiverBaseDeployment $commonDeployment) }}
---
{{- $receiverLogsArgs := merge (dict "ReceiverType" "logs" "TypeConfig" .Values.stackstate.components.receiver.split.logs) . -}}
{{- $receiverLogsDeployment := fromYaml (include "stackstate.receiver.deployment" $receiverLogsArgs) -}}
{{- toYaml (merge $receiverLogsDeployment $commonDeployment) }}
---
{{- $receiverProcessAgentArgs := merge (dict "ReceiverType" "process-agent" "TypeConfig" .Values.stackstate.components.receiver.split.processAgent) . -}}
{{- $receiverProcessAgentDeployment := fromYaml (include "stackstate.receiver.deployment" $receiverProcessAgentArgs) -}}
{{ toYaml (merge $receiverProcessAgentDeployment $commonDeployment) }}
{{ else }}
{{- $receiverArgs := merge (dict "ReceiverType" "" "TypeConfig" .Values.stackstate.components.receiver) . -}}
{{- $receiverDeployment := fromYaml (include "stackstate.receiver.deployment" $receiverArgs) -}}
{{- toYaml (merge $receiverDeployment $commonDeployment) }}
{{- end }}
