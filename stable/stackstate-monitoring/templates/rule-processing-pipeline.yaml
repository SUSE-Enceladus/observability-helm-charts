{{- if .Values.rules.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: stackstate-processing-pipeline-alerts
  labels:
    app: kube-prometheus-stack
{{- with .Values.rules.additionalLabels }}
{{ toYaml . | nindent 4 }}
{{- end }}
spec:
  groups:
    - name: stackstate-processing-pipeline-alerts
      rules:
        - alert: StackStateSyncLatency
          annotations:
            message: {{ `The synchronization for {{ $labels.namespace }} and integration {{ $labels.integration_type }} has high latency {{ $value | humanizeDuration }}.`}}
          expr: |
            stackstate_sync_sts_latency_seconds{quantile="0.98", namespace=~{{ .Values.rules.namespaceRegex | quote }}} > 60.000000
          for: 5m
          labels:
            severity: warning
        - alert: StackStateSyncMessageDuration
          annotations:
            message: {{`The synchronization for {{ $labels.namespace }} and integration {{ $labels.integration_type }} is running very slow, processing time for 1 message is now {{ $value | humanizeDuration }}.`}}
          expr: |
            (sum by (integration_type,pod)(rate(stackstate_sync_duration_seconds_sum{namespace=~{{ .Values.rules.namespaceRegex | quote }}}[1m]))
              /
            (sum by (integration_type, pod)(rate(stackstate_sync_changes_total{namespace=~{{ .Values.rules.namespaceRegex | quote }}}[1m])) > 0)) > 5.000000
          for: 5m
          labels:
            severity: warning
        - alert: StackStateKafkaTopologyTopicLag
          annotations:
            message: {{`Consumption of kafka messages for topology synchronization {{ $labels.namespace }}, topic {{ $labels.topic }} and service {{ $labels.service }} by client {{ $labels.client_id }} is lagging behind by {{ $value | humanizeDuration }}.`}}
          expr: |
            (sum(max_over_time(kafka_consumer_consumer_fetch_manager_metrics_records_lag_max{namespace=~{{ .Values.rules.namespaceRegex | quote}}, topic=~"sts_topo_.*"}[10m])) by (namespace, topic, service, client_id)
              /
            sum(max_over_time(kafka_consumer_consumer_fetch_manager_metrics_records_consumed_rate{namespace=~{{ .Values.rules.namespaceRegex | quote}}, topic=~"sts_topo_.*"}[10m])) by (namespace, topic, service, client_id)) > 120.0
          for: 5m
          labels:
            severity: warning
        - alert: StackStateKafkaTopicLag
          annotations:
            message: {{`Consumption of kafka messages for topology synchronization {{ $labels.namespace }}, topic {{ $labels.topic }} and service {{ $labels.service }} by client {{ $labels.client_id }} is lagging behind by {{ $value | humanizeDuration }}.`}}
          expr: |
            (sum(max_over_time(kafka_consumer_consumer_fetch_manager_metrics_records_lag_max{namespace=~{{ .Values.rules.namespaceRegex | quote}}, topic!~"sts_topo_.*"}[10m])) by (namespace, topic, service, client_id)
              /
            sum(max_over_time(kafka_consumer_consumer_fetch_manager_metrics_records_consumed_rate{namespace=~{{ .Values.rules.namespaceRegex | quote}}, topic!~"sts_topo_.*"}[10m])) by (namespace, topic, service, client_id)) > 120.0
          for: 5m
          labels:
            severity: warning
        - alert: StackStateKafkaToEsLatency
          annotations:
            message: {{`Data ingestion for {{$labels.namespace }}, topic {{$labels.topic}} and service {{ $labels.service }} is lagging behind by {{ $value | humanizeDuration }}.`}}
          expr: |
            (sum by (namespace, data_type, service)(stackstate_kafka2es_received_data_latency_seconds{namespace=~{{ .Values.rules.namespaceRegex | quote}}, quantile="0.95"})
              /
            sum by(namespace, data_type, service)(rate(stackstate_kafka2es_received_data_latency_seconds_count{namespace=~{{ .Values.rules.namespaceRegex | quote}}}[1m]))) > 120.0
          for: 5m
          labels:
            severity: warning
{{- end }}
