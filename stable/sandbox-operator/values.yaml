sandboxer:
  # sandboxer.image -- Image for the sandbox operator
  image: ghcr.io/stackvista/sandboxer:0.5.0
  # nodeSelector:
  #   node.kubernetes.io/purpose-core: "yes"
  securityContext:
    # sandboxer.securityContext.runAsUser -- Run sandboxer container under unprivileged user
    runAsUser: 65534
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 25m
      memory: 32Mi
  # tolerations:
  # - effect: NoSchedule
  #   operator: Exists
reaper:
  # reaper.image -- Image for the reaper job
  image: ghcr.io/stackvista/sandboxer:0.5.0
  # reaper.schedule -- Cron schedule for the reaper, once per day at midnight
  schedule: 0 0 * * *
  # reaper.defaultTTL -- Default TTL for a Sandbox (default: 168 hours = 1 week)
  defaultTTL: 168h
  # reaper.firstExpirationWarning -- How long in advance to warn the user that his sandbox will expire (default: 72 hours = 3 days)
  firstExpirationWarning: 72h
  # reaper.warningInterval -- Interval between 2 warnings that the sandbox will expire (default: 24 hours = 1 day)
  warningInterval: 24h
  messages:
    reapMessage: '<@{{ .Sandbox.Spec.SlackID }}>: Your sandbox `\{\{ .Sandbox.Name }}` has been reaped...'
    expirationWarning: '<@{{ .Sandbox.Spec.SlackID }}>: Your sandbox `{{ .Sandbox.Name }}` will expire on {{ .ExpirationDate }}'
    expirationOverdue: '<@{{ .Sandbox.Spec.SlackID }}>: Your sandbox `{{ .Sandbox.Name }}` cannot be automatically expired and has been running a long time, consider cleaning it up.'
  slack:
    # reaper.slack.apiKey -- Slack API token
    apiKey: ""
    # reaper.slack.channelId -- Slack Channel ID to post in (can be an ID or the channel name prefixed with a '#')
    channelId: ""
  # nodeSelector:
  #   node.kubernetes.io/purpose-core: "yes"
  securityContext:
    # reaper.securityContext.runAsUser -- Run reaper container under unprivileged user
    runAsUser: 65534
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 25m
      memory: 32Mi
  # tolerations:
  # - effect: NoSchedule
  #   operator: Exists
