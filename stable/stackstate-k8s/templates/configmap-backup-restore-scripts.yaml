{{- define "job-elasticsearch-list-snapshots.yaml" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: elasticsearch-list-snapshots
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.es.endpoint" . }},{{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: list
          image: "{{include "stackstate.containerTools.image.registry" .}}/{{ .Values.stackstate.components.containerTools.image.repository }}:{{ .Values.stackstate.components.containerTools.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.containerTools.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/list-elasticsearch-snapshots.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
          {{- with .Values.stackstate.components.containerTools.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
      restartPolicy: Never
{{- end -}}

{{- define "job-elasticsearch-restore-snapshot.yaml" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: elasticsearch-restore-snapshot
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.es.endpoint" . }},{{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: restore
          image: "{{include "stackstate.containerTools.image.registry" .}}/{{ .Values.stackstate.components.containerTools.image.repository }}:{{ .Values.stackstate.components.containerTools.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.containerTools.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/restore-elasticsearch-snapshot.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
            - name: SNAPSHOT_NAME
              value: "REPLACE_ME_SNAPSHOT_NAME_REPLACE_ME"
            - name: INDICES_TO_RESTORE
              value: "REPLACE_ME_INDICES_TO_RESTORE_REPLACE_ME"
          {{- with .Values.stackstate.components.containerTools.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
      restartPolicy: Never
{{- end -}}

{{- define "job-stackgraph-list-backups.yaml" -}}
{{- $imageTagConfig := dict "ImageTag" .Values.stackstate.components.server.image.tag }}
apiVersion: batch/v1
kind: Job
metadata:
  name: stackgraph-list-backups
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: list
          image: "{{include "stackstate.containerTools.image.registry" .}}/{{ .Values.stackstate.components.containerTools.image.repository }}:{{ .Values.stackstate.components.containerTools.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.containerTools.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/list-stackgraph-backups.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
          {{- with .Values.stackstate.components.backup.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
      restartPolicy: Never
{{- end -}}

{{- define "job-stackgraph-restore-backup.yaml" -}}
{{- $imageTagConfig := dict "ImageTag" .Values.stackstate.components.server.image.tag }}
apiVersion: batch/v1
kind: Job
metadata:
  name: stackgraph-restore-backup
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: restore
          image: "{{ include "stackstate.image.registry" . }}/{{ .Values.stackstate.components.server.image.repository }}{{ .Values.stackstate.components.all.image.repositorySuffix }}:{{ include "stackstate.server.image.tag" (merge $imageTagConfig .) }}"
          imagePullPolicy: {{ default .Values.stackstate.components.all.image.pullPolicy .Values.stackstate.components.server.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/restore-stackgraph-backup.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
            - name: BACKUP_FILE
              value: "REPLACE_ME_BACKUP_FILE_REPLACE_ME"
            - name: FORCE_DELETE
              value: "REPLACE_ME_FORCE_DELETE_REPLACE_ME"
            - name: ZOOKEEPER_QUORUM
              {{- if eq .Values.hbase.deployment.mode "Distributed" }}
              value: suse-observability-otel-zookeeper-headless:2181
              {{- else }}
              value: "stackstate-hbase-stackgraph:2182"
              {{- end }}
          {{- with .Values.stackstate.components.backup.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
            - name: tmp-data
              mountPath: /tmp-data
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
{{- if .Values.backup.stackGraph.securityContext.enabled }}
      securityContext: {{- omit .Values.backup.stackGraph.securityContext "enabled" | toYaml | nindent 8 }}
{{- end }}
      restartPolicy: Never
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
        - name: tmp-data
          persistentVolumeClaim:
            claimName: stackgraph-restore-backup
{{- end -}}

{{- define "pvc-stackgraph-restore-backup.yaml" -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stackgraph-restore-backup
spec:
  accessModes: {{ .Values.backup.stackGraph.restore.tempData.accessModes }}
  resources:
    requests:
      storage: {{ tpl .Values.backup.stackGraph.restore.tempData.size . }}
{{- if .Values.backup.stackGraph.restore.tempData.storageClass }}
  {{- if (eq "-" .Values.backup.stackGraph.restore.tempData.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.backup.stackGraph.restore.tempData.storageClass | quote }}
  {{- end }}
{{- end }}
{{- end -}}


{{- define "job-configuration-list-backups.yaml" -}}
{{- $imageTagConfig := dict "ImageTag" .Values.stackstate.components.server.image.tag }}
apiVersion: batch/v1
kind: Job
metadata:
  name: configuration-list-backups
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: list
          image: "{{include "stackstate.containerTools.image.registry" .}}/{{ .Values.stackstate.components.containerTools.image.repository }}:{{ .Values.stackstate.components.containerTools.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.containerTools.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/list-configuration-backups.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
          {{- with .Values.stackstate.components.backup.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
      restartPolicy: Never
{{- end -}}

{{- define "job-configuration-restore-backup.yaml" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: configuration-restore-backup
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: restore
          image: "{{include "stackstate.containerTools.image.registry" .}}/{{ .Values.stackstate.components.containerTools.image.repository }}:{{ .Values.stackstate.components.containerTools.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.containerTools.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/restore-configuration-backup.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
            - name: BACKUP_FILE
              value: "REPLACE_ME_BACKUP_FILE_REPLACE_ME"
            - name: FORCE_DELETE
              value: "REPLACE_ME_FORCE_DELETE_REPLACE_ME"
          {{- with .Values.stackstate.components.backup.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
{{- if .Values.backup.configuration.securityContext.enabled }}
      securityContext: {{- omit .Values.backup.configuration.securityContext "enabled" | toYaml | nindent 8 }}
{{- end }}
      restartPolicy: Never
      serviceAccountName: {{ template "common.fullname.short" . }}-backup
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
{{- end -}}

{{- define "job-victoria-metrics-list-backups.yaml" -}}
{{- $imageTagConfig := dict "ImageTag" .Values.stackstate.components.server.image.tag }}
apiVersion: batch/v1
kind: Job
metadata:
  name: victoria-metrics-list-backups
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: list
          image: "{{include "stackstate.containerTools.image.registry" .}}/{{ .Values.stackstate.components.containerTools.image.repository }}:{{ .Values.stackstate.components.containerTools.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.containerTools.image.pullPolicy | quote }}
          command:
            - '/backup-restore-scripts/list-victoria-metrics-backups.sh'
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
          {{- with .Values.stackstate.components.backup.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
      restartPolicy: Never
{{- end -}}

{{- define "job-victoria-metrics-restore-backup.yaml" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: victoria-metrics-restore-backup
  labels:
    app.kubernetes.io/component: backup
spec:
  backoffLimit: 1
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backup
    spec:
      initContainers:
        - name: wait
          command:
            - sh
            - -c
            - |
              /entrypoint -c {{ include "stackstate.minio.endpoint" . }} -t 300
          image: "{{include "stackstate.wait.image.registry" .}}/{{ .Values.stackstate.components.wait.image.repository }}:{{ .Values.stackstate.components.wait.image.tag }}"
          imagePullPolicy: {{ .Values.stackstate.components.wait.image.pullPolicy | quote }}
      containers:
        - name: restore
          image: "{{ include "stackstate.vmrestore.image.registry" . }}/{{ index .Values "victoria-metrics" "restore" "image" "repository" }}:{{ index .Values "victoria-metrics" "restore" "image" "tag" }}"
          imagePullPolicy: {{ index .Values "victoria-metrics" "restore" "image" "pullPolicy" | quote }}
          command:
            - '/backup-restore-scripts/restore-victoria-metrics-backup.sh'
          args:
            - "REPLACE_ME_VICTORIA_METRICS_INSTANCE_NAME"
            - "REPLACE_ME_VICTORIA_METRICS_S3_PREFIX"
          env:
            {{- include "stackstate.backup.envvars" . | nindent 12 }}
          {{- with .Values.stackstate.components.backup.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "stackstate.backup.volumeMounts" . | nindent 12 }}
            - mountPath: /storage
              name: victoria-metrics-storage
      {{- include "stackstate.image.pullSecret.name" (dict "images" (list .Values.stackstate.components.all.image) "context" $) | nindent 6 }}
{{- if index .Values "victoria-metrics" "restore" "securityContext" "enabled" }}
      securityContext: {{- omit (index .Values "victoria-metrics" "restore" "securityContext") "enabled" | toYaml | nindent 8 }}
{{- end }}
      restartPolicy: Never
      volumes:
        {{- include "stackstate.backup.volumes" . | nindent 8 }}
        - name: victoria-metrics-storage
          persistentVolumeClaim:
            claimName: server-volume-suse-observability-REPLACE_ME_VICTORIA_METRICS_INSTANCE_NAME-0
{{- end -}}

{{- if and .Values.backup.enabled (or .Values.backup.stackGraph.restore.enabled .Values.backup.stackGraph.scheduled.enabled .Values.backup.elasticsearch.restore.enabled .Values.backup.elasticsearch.scheduled.enabled (index .Values "backup" "configuration" "restore" "enabled") (index .Values "backup" "configuration" "scheduled" "enabled") (index .Values "victoria-metrics-0" "backup" "enabled") (index .Values "victoria-metrics-1" "backup" "enabled") (index .Values "victoria-metrics-0" "restore" "enabled") (index .Values "victoria-metrics-1" "restore" "enabled") .Values.clickhouse.backup.enabled .Values.clickhouse.restore.enabled) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "common.fullname.short" . }}-backup-restore-scripts
  labels:
    stackstate.com/backup-scripts: "true"
data:
  configure-backup.sh: |
    {{- .Files.Get "scripts/configure-backup.sh" | nindent 4 }}
  expire-s3-backups.sh: |
    {{- .Files.Get "scripts/expire-s3-backups.sh" | nindent 4 }}
{{- if .Values.backup.stackGraph.scheduled.enabled }}
  backup-stackgraph.sh: |
    {{- .Files.Get "scripts/backup-stackgraph.sh" | nindent 4 }}
{{- end }}
{{- if .Values.backup.configuration.scheduled.enabled }}
  backup-configuration.sh: |
    {{- .Files.Get "scripts/backup-configuration.sh" | nindent 4 }}
{{- end }}
{{- if .Values.backup.elasticsearch.restore.enabled }}
  job-elasticsearch-list-snapshots.yaml: |
    {{- include "job-elasticsearch-list-snapshots.yaml" . | nindent 4 }}
  list-elasticsearch-snapshots.sh: |
    {{- .Files.Get "scripts/list-elasticsearch-snapshots.sh" | nindent 4 }}
  job-elasticsearch-restore-snapshot.yaml: |
    {{- include "job-elasticsearch-restore-snapshot.yaml" . | nindent 4 }}
  restore-elasticsearch-snapshot.sh: |
    {{- .Files.Get "scripts/restore-elasticsearch-snapshot.sh" | nindent 4 }}
{{- end }}
{{- if .Values.backup.stackGraph.restore.enabled }}
  job-stackgraph-list-backups.yaml: |
    {{- include "job-stackgraph-list-backups.yaml" . | nindent 4 }}
  list-stackgraph-backups.sh: |
    {{- .Files.Get "scripts/list-stackgraph-backups.sh" | nindent 4 }}
  job-stackgraph-restore-backup.yaml: |
    {{- include "job-stackgraph-restore-backup.yaml" . | nindent 4 }}
  pvc-stackgraph-restore-backup.yaml: |
    {{- include "pvc-stackgraph-restore-backup.yaml" . | nindent 4 }}
  restore-stackgraph-backup.sh: |
    {{- .Files.Get "scripts/restore-stackgraph-backup.sh" | nindent 4 }}
{{- end }}
{{- if .Values.backup.configuration.restore.enabled }}
  job-configuration-list-backups.yaml: |
    {{- include "job-configuration-list-backups.yaml" . | nindent 4 }}
  list-configuration-backups.sh: |
    {{- .Files.Get "scripts/list-configuration-backups.sh" | nindent 4 }}
  job-configuration-restore-backup.yaml: |
    {{- include "job-configuration-restore-backup.yaml" . | nindent 4 }}
  restore-configuration-backup.sh: |
    {{- .Files.Get "scripts/restore-configuration-backup.sh" | nindent 4 }}
{{- end }}
{{- if or (index .Values "victoria-metrics-0" "restore" "enabled") (index .Values "victoria-metrics-1" "restore" "enabled") }}
  job-victoria-metrics-list-backups.yaml: |
    {{- include "job-victoria-metrics-list-backups.yaml" . | nindent 4 }}
  list-victoria-metrics-backups.sh: |
    {{- .Files.Get "scripts/list-victoria-metrics-backups.sh" | nindent 4 }}
  job-victoria-metrics-restore-backup.yaml: |
    {{- include "job-victoria-metrics-restore-backup.yaml" . | nindent 4 }}
  restore-victoria-metrics-backup.sh: |
    {{- .Files.Get "scripts/restore-victoria-metrics-backup.sh" | nindent 4 }}
  restore-victoria-metrics-0-enabled: {{ index .Values "victoria-metrics-0" "restore" "enabled" | quote }} # It is used by a restore script to check if restore is enabled for this specific instance
  restore-victoria-metrics-1-enabled: {{ index .Values "victoria-metrics-1" "restore" "enabled" | quote }} # It is used by a restore script to check if restore is enabled for this specific instance
{{- end }}
{{- end }}
