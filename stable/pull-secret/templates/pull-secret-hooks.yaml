{{- $auths := dict -}}
{{- if .Values.global -}}
  {{- if and .Values.global.imagePullUsername .Values.global.imagePullPassword .Values.global.imageRegistry -}}
    {{- $authMessage := printf "%s:%s" .Values.global.imagePullUsername .Values.global.imagePullPassword | b64enc }}
    {{- $registryAuthDocument := dict "auth" $authMessage }}
    {{- $_ := set $auths .Values.global.imageRegistry $registryAuthDocument }}
  {{- end -}}
{{- end -}}
{{- range $secret := .Values.credentials -}}
  {{- $authMessage := printf "%s:%s" $secret.username $secret.password | b64enc }}
  {{- $registryAuthDocument := dict "auth" $authMessage }}
  {{- $_ := set $auths $secret.registry $registryAuthDocument }}
{{- end -}}
{{- $dockerConfigJson := dict "auths" $auths }}
apiVersion: v1
kind: Secret
metadata:
  # This secret has exactly the same name as the normal pull secret but gets created at pre-install and post-delete hooks
  # for use in other pre-install and post-delete hooks.
  name: {{ template "pullsecret.fullname.short" . }}
  annotations:
    "helm.sh/hook": pre-install,post-delete
    "helm.sh/hook-weight": "-1000"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
data:
  .dockerconfigjson: {{ $dockerConfigJson | toJson | b64enc | quote }}
type: kubernetes.io/dockerconfigjson
