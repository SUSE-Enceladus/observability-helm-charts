{{- define "stackgraphcontainer.init" -}}
name: stackgraph-init
command:
  - sh
  - -c
  - |
    mkdir -p "/hadoop-data/data/tephra/default"
image: "{{ include "common.image.registry" (dict "image" .Values.wait.image "context" .) }}/{{ .Values.wait.image.repository }}:{{ .Values.wait.image.tag }}"
imagePullPolicy: {{ .Values.wait.image.pullPolicy | quote }}
volumeMounts:
  - name: data
    mountPath: /hadoop-data/data
{{- end -}}

{{- define "stackgraph.container.main" -}}
name: stackgraph
image: "{{ include "common.image.registry" (dict "image" .Values.all.image "context" .) }}/{{ .Values.stackgraph.image.repository }}:{{ default (printf "%s-%s" .Values.version .Values.stackgraph.version) .Values.stackgraph.image.tag }}"
imagePullPolicy: {{ default .Values.stackgraph.image.pullPolicy .Values.stackgraph.image.pullPolicy | quote  }}
env:
- name: HDFS_CONF_dfs_namenode_fs___limits_max___component___length
  value: "0"
{{- include "all.commonEnv" . }}
{{- include "hbase.master.commonEnv" . }}
{{- include "hbase.regionserver.commonEnv" . }}
- name: HBASE_CONF_hbase_regionserver_hostname
  value: "{{ template "common.fullname.short" . }}-stackgraph"
- name: HBASE_CONF_hbase_master_hostname
  value: "{{ template "common.fullname.short" . }}-stackgraph"
- name: ZK_CONF_server_1
  value: "{{ template "common.fullname.short" . }}-stackgraph:2182"
- name: HBASE_CONF_hbase_rootdir
  value: /hadoop-data/data/hbase
- name: HBASE_CONF_hbase_zookeeper_property_dataDir
  value: /hadoop-data/data/zookeeper
- name: HBASE_CONF_data_tx_snapshot_local_dir
  value: /hadoop-data/data/tephra
- name: HBASE_CONF_hbase_master_info_port
  value: "{{ .Values.stackgraph.livenessProbe.httpPort }}"
ports:
{{- range untilStep 10125 10225 1 }}
- containerPort: {{ . }}
  name: ftp-{{ . }}
{{- end }}
- containerPort: 10021
  name: ftp
- containerPort: 2182
  name: zk
- containerPort: 16021
  name: rs
- containerPort: 16001
  name: master
- containerPort: {{ .Values.stackgraph.livenessProbe.httpPort }}
  name: masterinfo
{{- if .Values.all.metrics.enabled }}
- containerPort: 9404
  name: metrics
{{- end }}
livenessProbe:
  httpGet:
    path: /
    port: masterinfo
readinessProbe:
  httpGet:
    path: /
    port: masterinfo
{{- with .Values.stackgraph.resources }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}
securityContext:
  runAsNonRoot: true
volumeMounts:
  - name: data
    mountPath: /hadoop-data/data
{{- end -}}

{{- define "stackgraph.statefulset" -}}
{{- $commonContainer := fromYaml (include "common.container" .) -}}
{{- $overrideContainer := fromYaml (include "stackgraph.container.main" .) -}}
{{- $stackgraphMainContainer := (merge $overrideContainer $commonContainer) -}}
{{- $overrideContainer := fromYaml (include "stackgraphcontainer.init" .) -}}
{{- $stackgraphInitContainer := (merge $overrideContainer $commonContainer) -}}
metadata:
  labels:
    app.kubernetes.io/component: stackgraph
  name: {{ template "common.fullname.short" . }}-stackgraph
spec:
  podManagementPolicy: Parallel
  replicas: 1
  serviceName: {{ template "common.fullname.short" . }}-stackgraph
  selector:
    matchLabels:
      app.kubernetes.io/component: stackgraph
  template:
    metadata:
      labels:
        app.kubernetes.io/component: stackgraph
      annotations:
      {{ include "common.metrics.annotations" (dict "metrics" .Values.all.metrics "port" "9404" "container_name" "stackgraph" "filter" .Values.stackgraph.agentMetricsFilter ) | indent 8 }}
    spec:
      {{- include "common.image.pullSecret.name" (dict "images" (list .Values.all.image) "context" $) | nindent 6 }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ template "common.fullname.short" . }}-hbase
      {{- end }}
      {{- if .Values.hbase.securityContext.enabled }}
      securityContext: {{- omit .Values.stackgraph.securityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
      - {{ toYaml $stackgraphInitContainer | nindent 8 }}
      containers:
      - {{ toYaml $stackgraphMainContainer | nindent 8 }}
    {{- if or .Values.all.nodeSelector .Values.stackgraph.nodeSelector }}
      nodeSelector:
      {{- with .Values.all.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackgraph.nodeSelector }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.affinity .Values.stackgraph.affinity }}
      affinity:
      {{- with .Values.all.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackgraph.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- if or .Values.all.tolerations .Values.stackgraph.tolerations }}
      tolerations:
      {{- with .Values.all.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.stackgraph.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
{{- if .Values.hdfs.datanode.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{ .Values.stackgraph.persistence.accessModes }}
        resources:
          requests:
            storage: {{ .Values.stackgraph.persistence.size }}
      {{ include "common.storage.class" ( dict "persistence" .Values.stackgraph.persistence "global" .Values.global) | nindent 6 }}
{{- end }}
{{- end -}}

{{- if eq .Values.deployment.mode "Mono" -}}
{{- $commonStatefulSet := fromYaml (include "common.statefulset" .) -}}
{{- $stackgraphStatefulSet := fromYaml (include "stackgraph.statefulset" .) -}}
{{- toYaml (merge $stackgraphStatefulSet $commonStatefulSet) -}}
{{- end -}}
