{{- if not .Values.persistence.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "stackstate-standalone.fullname" . }}
  annotations:
    {{- include "gitlab.annotations" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
{{ include "stackstate-standalone.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "stackstate-standalone.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- include "gitlab.annotations" . | nindent 8 }}
        {{- include "stackstate-standalone.checksum-configs" . | nindent 8 }}
      {{- with .Values.pod.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "stackstate-standalone.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.image.pullSecretUsername }}
      imagePullSecrets:
      - name: {{ include "stackstate-standalone.fullname" . }}-pull-secret
      {{- end }}
      containers:
        - args: ["start"]
          name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {{- .Values.stackstate.securityContext | toYaml | nindent 12 }}
          env:
          {{ include "stackstate-standalone.requiredEnvVars" . | indent 10 }}
          ports:
            - name: ui
              containerPort: 7070
              protocol: TCP
            - name: receiver
              containerPort: 7077
              protocol: TCP
            - name: admin
              containerPort: 7071
              protocol: TCP
            - name: instance
              containerPort: 7080
              protocol: TCP
            - name: health
              containerPort: 1618
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /liveness
              port: health
              scheme: HTTP
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /readiness
              port: health
              scheme: HTTP
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ .Chart.Name }}
              topologyKey: "kubernetes.io/hostname"
    {{- with .Values.affinity }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
